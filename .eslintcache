[{"E:\\Dev\\crypto-tax\\src\\index.js":"1","E:\\Dev\\crypto-tax\\src\\reportWebVitals.js":"2","E:\\Dev\\crypto-tax\\src\\App.js":"3","E:\\Dev\\crypto-tax\\src\\addTax.js":"4","E:\\Dev\\crypto-tax\\src\\getTransactionData.js":"5","E:\\Dev\\crypto-tax\\src\\useCryptoMarketData.js":"6","E:\\Dev\\crypto-tax\\src\\RoundTo.js":"7","E:\\Dev\\crypto-tax\\src\\parseTransactionData.js":"8","E:\\Dev\\crypto-tax\\src\\useTransactionData.js":"9","E:\\Dev\\crypto-tax\\src\\useSummaryData.js":"10"},{"size":592,"mtime":1613001785887,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":7103,"mtime":1613170418164,"results":"14","hashOfConfig":"12"},{"size":2935,"mtime":1612722427470,"results":"15","hashOfConfig":"12"},{"size":1306,"mtime":1612722276543,"results":"16","hashOfConfig":"12"},{"size":1597,"mtime":1613168681366,"results":"17","hashOfConfig":"12"},{"size":773,"mtime":1612821819718,"results":"18","hashOfConfig":"12"},{"size":489,"mtime":1613083077372,"results":"19","hashOfConfig":"12"},{"size":899,"mtime":1613085516890,"results":"20","hashOfConfig":"12"},{"size":583,"mtime":1613085594341,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1dgsbvl",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"E:\\Dev\\crypto-tax\\src\\index.js",[],["44","45"],"E:\\Dev\\crypto-tax\\src\\reportWebVitals.js",[],"E:\\Dev\\crypto-tax\\src\\App.js",["46"],"import React from 'react'\r\nimport styled from '@emotion/styled'\r\nimport fs from 'fs'\r\nimport useCryptoMarketData from './useCryptoMarketData'\r\nimport RoundTo from './RoundTo'\r\nimport parseTransactionData from './parseTransactionData'\r\nimport useTransactionData from './useTransactionData'\r\nimport useSummaryData from './useSummaryData'\r\n\r\nconst COLOR_FOREGROUND = '#DFE1E8'\r\nconst COLOR_BACKGROUND_LIGHT = '#2B303B'\r\nconst COLOR_BACKGROUND_DARK = '#21252B'\r\nconst COLOR_BORDER = '#65737E'\r\n\r\nconst Container = styled.div({\r\n  height: '100%',\r\n  color: COLOR_FOREGROUND,\r\n  backgroundColor: COLOR_BACKGROUND_LIGHT\r\n})\r\n\r\nconst Header = styled.h1({\r\n  margin: '0 0 24px',\r\n  paddingBottom: 8,\r\n  borderBottom: `3px solid ${COLOR_BORDER}`\r\n})\r\n\r\nconst Content = styled.div({\r\n  minHeight: 400,\r\n  padding: '16px 16px 32px'\r\n})\r\n\r\nconst InfoContainer = styled.div({\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  'div:first-of-type': {\r\n    fontFamily: '\"Trebuchet MS\"',\r\n    fontSize: 18,\r\n    marginRight: 8\r\n  },\r\n  'img': {\r\n    position: 'relative',\r\n    bottom: -2,\r\n    verticalAlign: 'bottom',\r\n    marginRight: 12\r\n  },\r\n  'div.current-price': {\r\n    alignSelf: 'flex-end',\r\n  }\r\n})\r\n\r\nconst SummaryTable = styled.table({\r\n  borderCollapse: 'collapse',\r\n  fontSize: 16,\r\n  marginBottom: 24,\r\n  'tr > td:first-of-type': {\r\n    fontFamily: '\"Trebuchet MS\"',\r\n    textAlign: 'left',\r\n    padding: '2px 12px 2px 2px'\r\n  },\r\n  'tr.total-sell td': {\r\n    paddingBottom: 4\r\n  },\r\n  'tr.profit': {\r\n    borderTop: `1px solid ${COLOR_BORDER}`,\r\n    color: '#8FA1B3'\r\n  },\r\n  'tr.profit td': {\r\n    paddingTop: 12\r\n  },\r\n  'tr.tax': {\r\n    color: '#B9616A'\r\n  },\r\n  'tr.net': {\r\n    fontSize: 22,\r\n    color: '#9DBE8C'\r\n  },\r\n  'td': {\r\n    fontFamily: '\"Lucida Console\", Monaco, monospace',\r\n    textAlign: 'right',\r\n    padding: '2px 2px 2px 2px'\r\n  }\r\n})\r\n\r\nconst TransactionTable = styled.table({\r\n  borderCollapse: 'collapse',\r\n  width: '100%',\r\n  marginBottom: 24,\r\n  'thead': {\r\n    fontSize: 20,\r\n    textAlign: 'right',\r\n    borderBottom: `3px solid ${COLOR_BORDER}`\r\n  },\r\n  'tbody': {\r\n    fontFamily: '\"Lucida Console\", Monaco, monospace',\r\n    fontSize: 15,\r\n    textAlign: 'right'\r\n  },\r\n  'tr': {\r\n    borderBottom: `1px solid ${COLOR_BORDER}`\r\n  },\r\n  'th': {\r\n    padding: '8px 16px'\r\n  },\r\n  'th.profit': {\r\n    color: '#8FA1B3'\r\n  },\r\n  'th.tax': {\r\n    color: '#B9616A'\r\n  },\r\n  'th.net': {\r\n    color: '#9DBE8C'\r\n  },\r\n  'td': {\r\n    verticalAlign: 'bottom',\r\n    height: 40,\r\n    padding: '12px 16px'\r\n  },\r\n  'td.currency': {\r\n    borderRight: `1px solid ${COLOR_BORDER}`\r\n  },\r\n  'td.total-sell': {\r\n    borderRight: `1px solid ${COLOR_BORDER}`\r\n  }\r\n})\r\n\r\nconst TransactionEmpty = styled('div')({\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  height: 200,\r\n  borderRadius: 4,\r\n  border: `1px dashed ${COLOR_BORDER}`,\r\n  color: COLOR_BORDER\r\n})\r\n\r\nfunction App() {\r\n  const fileDragArea = React.useRef()\r\n  const [data, setData] = React.useState()\r\n\r\n  const { marketData } = useCryptoMarketData()\r\n  const transactionData = useTransactionData(marketData, data)\r\n  const summaryData = useSummaryData(transactionData)\r\n\r\n  React.useEffect(\r\n    () => {\r\n      async function getTransactionData() {\r\n        const path = localStorage.getItem('path')\r\n\r\n        if (path) {\r\n          const file = fs.createReadStream(path)\r\n          const data = await parseTransactionData(file)\r\n\r\n          setData(data)\r\n        }\r\n      }\r\n\r\n      getTransactionData()\r\n    },\r\n    []\r\n  )\r\n\r\n  React.useEffect(\r\n    () => {\r\n      fileDragArea.current.ondragover = () => false\r\n      fileDragArea.current.ondragleave = () => false\r\n      fileDragArea.current.ondragend = () => false\r\n\r\n      fileDragArea.current.ondrop = (e) => {\r\n        e.preventDefault()\r\n        const file = e.dataTransfer.files[0]\r\n\r\n        if (!file) {\r\n          return false\r\n        }\r\n\r\n        async function getTransactionData() {\r\n          const data = await parseTransactionData(file)\r\n          setData(data)\r\n        }\r\n\r\n        getTransactionData()\r\n        return false\r\n      }\r\n    },\r\n    []\r\n  )\r\n\r\n  function renderSummary() {\r\n    if (!summaryData) {\r\n      return null\r\n    }\r\n\r\n    return (\r\n      <SummaryTable>\r\n        <tbody>\r\n          <tr>\r\n            <td>Total Buy:</td>\r\n            <td>{RoundTo.currency().value(summaryData.totalBuy)}</td>\r\n          </tr>\r\n          <tr className={'total-sell'}>\r\n            <td>Total Sell:</td>\r\n            <td>{RoundTo.currency().value(summaryData.totalSell)}</td>\r\n          </tr>\r\n          <tr className={'profit'}>\r\n            <td>Profit:</td>\r\n            <td>{RoundTo.currency().value(summaryData.profit)}</td>\r\n          </tr>\r\n          <tr className={'tax'}>\r\n            <td>Tax:</td>\r\n            <td>{RoundTo.currency().value(summaryData.tax)}</td>\r\n          </tr>\r\n          <tr className={'net'}>\r\n            <td>Net:</td>\r\n            <td>{RoundTo.currency().value(summaryData.net)}</td>\r\n          </tr>\r\n        </tbody>\r\n      </SummaryTable>\r\n    )\r\n  }\r\n\r\n  function renderTransactionTable() {\r\n    if (transactionData.length === 0) {\r\n      return (\r\n        <TransactionEmpty>\r\n          <h3>No data available!</h3>\r\n        </TransactionEmpty>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <TransactionTable>\r\n        <thead>\r\n          <tr>\r\n            <th />\r\n            <th>Quantity</th>\r\n            <th>Total Buy</th>\r\n            <th>Total Sell</th>\r\n            <th className={'profit'}>Profit</th>\r\n            <th className={'tax'}>Tax</th>\r\n            <th className={'net'}>Net</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {transactionData.map((transaction) => {\r\n            const currency = marketData[transaction.currencySymbol]\r\n\r\n            return (\r\n              <tr key={currency.symbol}>\r\n                <td className={'currency'}>\r\n                  <InfoContainer>\r\n                    <div>\r\n                      <img alt={currency.symbol} src={currency.image} width={24} height={24} />\r\n                      <span>{currency.name}:</span>\r\n                    </div>\r\n                    <div className={'current-price'}>{RoundTo.currency().value(currency.currentPrice)}</div>\r\n                  </InfoContainer>\r\n                </td>\r\n                <td>{RoundTo.f8().value(transaction.quantity)}</td>\r\n                <td>{RoundTo.currency().value(transaction.totalBuy)}</td>\r\n                <td className={'total-sell'}>{RoundTo.currency().value(transaction.totalSell)}</td>\r\n                <td>{RoundTo.currency().value(transaction.profit)}</td>\r\n                <td>{RoundTo.currency().value(transaction.tax)}</td>\r\n                <td>{RoundTo.currency().value(transaction.net)}</td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </TransactionTable>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Container ref={fileDragArea}>\r\n      <Content>\r\n        <Header>Crypto Tax</Header>\r\n        {renderSummary()}\r\n        {renderTransactionTable()}\r\n      </Content>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default App\r\n","E:\\Dev\\crypto-tax\\src\\addTax.js",[],"E:\\Dev\\crypto-tax\\src\\getTransactionData.js",[],"E:\\Dev\\crypto-tax\\src\\useCryptoMarketData.js",[],"E:\\Dev\\crypto-tax\\src\\RoundTo.js",[],"E:\\Dev\\crypto-tax\\src\\parseTransactionData.js",[],"E:\\Dev\\crypto-tax\\src\\useTransactionData.js",[],"E:\\Dev\\crypto-tax\\src\\useSummaryData.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":12,"column":7,"nodeType":"53","messageId":"54","endLine":12,"endColumn":28},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'COLOR_BACKGROUND_DARK' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]